/*
 * WARNING
 *
 * This file is maintained automatically by Bndtools.
 * You should not edit it.
 *
 * See the BUILDING-GRADLE.md document in the root project for more details.
 *
 * Add findbugs tasks to a (java) project.
 *
 * Note: the 'java' plugin must have been applied to the project before this
 *       file can be applied.
 *
 * Note: Set the 'CI' property (-PCI on the command line) to generate XML
 *       reports instead of html reports.
 */

assert(project != rootProject                              )
assert(hasProperty('gradleBuildFindbugsEffort'            ))
assert(hasProperty('gradleBuildFindbugsExcludesFile'      ))
assert(hasProperty('gradleBuildFindbugsIgnoreFailures'    ))
assert(hasProperty('gradleBuildFindbugsIncludesFile'      ))
assert(hasProperty('gradleBuildFindbugsPropertyXmlReports'))
assert(hasProperty('gradleBuildFindbugsReportLevel'       ))
assert(hasProperty('gradleBuildFindbugsReportsDir'        ))
assert(hasProperty('gradleBuildFindbugsToolVersion'       ))


repositories {
  mavenCentral()
}


apply plugin: 'findbugs'


findbugs {
  reportsDir     = new File(buildDir, "$gradleBuildFindbugsReportsDir")
  includeFilter  = file(gradleBuildFindbugsIncludesFile               )
  excludeFilter  = file(gradleBuildFindbugsExcludesFile               )
  effort         =      gradleBuildFindbugsEffort
  ignoreFailures =      gradleBuildFindbugsIgnoreFailures
  reportLevel    =      gradleBuildFindbugsReportLevel
  toolVersion    =      gradleBuildFindbugsToolVersion
}

findbugsMain {
  dependsOn assemble
  reports {
    xml.enabled  = rootProject.hasProperty(gradleBuildFindbugsPropertyXmlReports) ? true  : false
    html.enabled = rootProject.hasProperty(gradleBuildFindbugsPropertyXmlReports) ? false : true
  }
}

findbugsTest {
  dependsOn test
  reports {
    xml.enabled  = rootProject.hasProperty(gradleBuildFindbugsPropertyXmlReports) ? true  : false
    html.enabled = rootProject.hasProperty(gradleBuildFindbugsPropertyXmlReports) ? false : true
  }
}

gradle.taskGraph.whenReady { taskGraph ->
  tasks.findbugsMain.onlyIf {
    taskGraph.hasTask((tasks.findbugs))
  }
  tasks.findbugsTest.onlyIf {
    taskGraph.hasTask((tasks.findbugstest))
  }
}
